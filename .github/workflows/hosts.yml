
name: hosts

on:
  schedule:
    # Runs at 00:00 UTC every day.
    - cron: '0 0 * * *'

  workflow_dispatch:
    inputs:
      dns:
        description: 'DNS'
        required: true
        default: google
        type: choice
        options:
        - google
        - opendns
        - norton
        - dnswatch
        - comodo
        - dudns
        - alidns
        - dnspod
        - '114'
        - onedns

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python 3
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
          
      - name: Init Env
        run : |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          sudo timedatectl set-timezone "Asia/Shanghai"
          python -m pip install --upgrade pip setuptools
          python -m pip install dnspython
          
      - name: Get Github Hosts
        uses: jannekem/run-python-script-action@v1.2
        with:
          script: |
            import time, dns.resolver, dns.rdatatype

            resolver = dns.resolver.Resolver()

            DNSLIST = {
              'google': ['8.8.8.8', '8.8.4.4'],
              'opendns': ['208.67.222.222', '208.67.220.220'],
              'norton': ['199.85.126.10', '199.85.127.10'],
              'dnswatch': ['84.200.69.80', '84.200.70.40'],
              'comodo': ['8.26.56.26', '8.20.247.20'],
              'dudns': ['180.76.76.76'],                            # 百度 http://dudns.baidu.com
              'alidns': ['223.5.5.5', '223.6.6.6'],                 # 阿里 http://alidns.com
              'dnspod': ['119.29.29.29', '182.254.116.116'],        # 腾讯 https://www.dnspod.cn
              '114': ['114.114.114.114', '114.114.115.115'],        # 114  http://www.114dns.com
              'onedns': ['112.124.47.27', '114.215.126.16'],  
            }
            DNSKEY = 'alidns'

            if '${{ inputs.dns }}' != '':
                DNSKEY = '${{ inputs.dns }}'

            def dnsChecker(qname='', rdtype=dns.rdatatype.A, dnsservers=['8.8.8.8']):
                ret = None
                try:
                    resolver.nameservers = dnsservers  # 指定DNS服务器
                    result = resolver.resolve(qname=qname, rdtype=rdtype)
                    for i in result.response.answer:
                        if i.rdtype != rdtype:
                            continue
                        for j in i.items:
                            ret = j.to_text()
                            break
                except Exception as err:
                    print(err)
                return ret

            if __name__ == '__main__':

                gitHubDoMains = [
                    "github.githubassets.com",
                    "central.github.com",
                    "desktop.githubusercontent.com",
                    "assets-cdn.github.com",
                    "camo.githubusercontent.com",
                    "github.map.fastly.net",
                    "github.global.ssl.fastly.net",
                    "gist.github.com",
                    "github.io",
                    "github.com",
                    "api.github.com",
                    "raw.githubusercontent.com",
                    "user-images.githubusercontent.com",
                    "favicons.githubusercontent.com",
                    "avatars5.githubusercontent.com",
                    "avatars4.githubusercontent.com",
                    "avatars3.githubusercontent.com",
                    "avatars2.githubusercontent.com",
                    "avatars1.githubusercontent.com",
                    "avatars0.githubusercontent.com",
                    "avatars.githubusercontent.com",
                    "codeload.github.com",
                    "github-cloud.s3.amazonaws.com",
                    "github-com.s3.amazonaws.com",
                    "github-production-release-asset-2e65be.s3.amazonaws.com",
                    "github-production-user-asset-6210df.s3.amazonaws.com",
                    "github-production-repository-file-5c1aeb.s3.amazonaws.com",
                    "githubstatus.com",
                    "github.community",
                    "media.githubusercontent.com",
                    "objects.githubusercontent.com"
                ]
                
                tMMDoMains = [
                    "themoviedb.org",
                    "www.themoviedb.org",
                    "api.themoviedb.org",
                    "tmdb.org",
                    "api.tmdb.org",
                    "image.tmdb.org"
                ]
                
                dnsList = []

                dnsList.append('# ING Hosts Start')
                dnsList.append('# Raw Url: https://raw.githubusercontent.com/wjz304/hosts/main/hosts')
                dnsList.append('# DNS Servers: {} {}'.format(DNSKEY.upper(), DNSLIST[DNSKEY]))
                dnsList.append('# Update at: {}'.format(time.strftime("%Y-%m-%d %H:%M:%S")))
                # GitHub
                dnsList.append('# GitHub Hosts Start')
                for domain in gitHubDoMains:
                    ip = dnsChecker(domain, dns.rdatatype.A, DNSLIST[DNSKEY])
                    if ip != None:
                        dnsList.append((ip.ljust(16) + domain))
                dnsList.append('# GitHub Hosts End')
                # TMM
                dnsList.append('# TMM Hosts Start')
                for domain in tMMDoMains:
                    ip = dnsChecker(domain, dns.rdatatype.A, DNSLIST[DNSKEY])
                    if ip != None:
                        dnsList.append((ip.ljust(16) + domain))
                dnsList.append('# TMM Hosts End')
                
                dnsList.append('# ING Hosts End')
                
                with open('hosts', 'w', encoding="utf-8") as f:
                    f.writelines('\n'.join(dnsList))

      - name: Check and Push
        run: |
          if [ -n "$(git status -s | grep hosts)" ]; then
            git add hosts
            git commit -m "update $(date +%Y-%m-%d" "%H:%M:%S)"
            git push -f
          fi

